buildscript {
    ext {
        springBootVersion = rev_spring_boot
        herokuPluginVersion = rev_heroku_plugin
    }

    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath ("gradle.plugin.com.heroku.sdk:heroku-gradle:${herokuPluginVersion}")
    }
}

group = 'com.azarenka'
version 'alpha 0.7'



apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "com.heroku.sdk.heroku-gradle"

heroku {
    appName="back-end-furniture"
    processTypes(
            web: "java $JAVA_OPTS -jar -Dspring.profiles.active=production build/libs/furniture-alpha 0.7.jar --server.port=$PORT".toString()
    )
}

deployHeroku {
    dependsOn build

    doFirst {
        if (!System.getenv('HEROKU_API_KEY')) {
            throw new GradleException('Deployment to Heroku requires setting the environment variable HEROKU_API_KEY')
        }
    }
}



repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.session:spring-session-core'
    implementation 'io.jsonwebtoken:jjwt:' + rev_jjwt
    implementation 'net.sf.dozer:dozer:' + rev_dozer_mapper
    implementation 'org.mockito:mockito-core:2.22.0'
    runtimeOnly 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.postgresql:postgresql'
    implementation 'org.hibernate:hibernate:3.6.0.Beta2'

    implementation 'commons-codec:commons-codec:1.11'
    testCompile("org.springframework.boot:spring-boot-starter-test")
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.11'
}


